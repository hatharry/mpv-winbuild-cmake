From ae703a0142d4091b17f5880eb4e18a22b064f135 Mon Sep 17 00:00:00 2001
From: shinchiro <shinchiro@users.noreply.github.com>
Date: Thu, 10 Dec 2020 23:16:11 +0800
Subject: [PATCH] fix compile for v3.7.8

---
 src/filesystem.cpp |  2 +-
 src/win32/fs.cpp   | 16 ++++++++--------
 2 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/src/filesystem.cpp b/src/filesystem.cpp
index 067846dc6..028096ff2 100644
--- a/src/filesystem.cpp
+++ b/src/filesystem.cpp
@@ -914,7 +914,7 @@ LocalPath LocalPath::fromPlatformEncoded(string path)
     assert(!(path.size() % 2));
     LocalPath p;
     p.localpath.resize(path.size() / sizeof(wchar_t));
-    memcpy(p.localpath.data(), path.data(), p.localpath.size() * sizeof(wchar_t));
+    memcpy(const_cast<wchar_t*>(p.localpath.data()), path.data(), p.localpath.size() * sizeof(wchar_t));
     return p;
 #else
     LocalPath p;
diff --git a/src/win32/fs.cpp b/src/win32/fs.cpp
index 5b57036f2..112091f84 100644
--- a/src/win32/fs.cpp
+++ b/src/win32/fs.cpp
@@ -725,7 +725,7 @@ void WinFileSystemAccess::path2local(const string* path, std::wstring* local) co
     int len = MultiByteToWideChar(CP_UTF8, 0,
         path->c_str(),
         -1,
-        local->data(),
+        (LPWSTR)local->data(),
         int(local->size()));
     if (len)
     {
@@ -776,13 +776,13 @@ bool WinFileSystemAccess::getsname(const LocalPath& namePath, LocalPath& snamePa
     DWORD r = DWORD(name.size());
     sname.resize(r);
 
-    DWORD rr = GetShortPathNameW(name.data(), sname.data(), r);
+    DWORD rr = GetShortPathNameW(name.data(), (LPWSTR)sname.data(), r);
 
     sname.resize(rr);
 
     if (rr >= r)
     {
-        rr = GetShortPathNameW(name.data(), sname.data(), rr);
+        rr = GetShortPathNameW(name.data(), (LPWSTR)sname.data(), rr);
         sname.resize(rr);
     }
 
@@ -1121,7 +1121,7 @@ bool WinFileSystemAccess::expanselocalpath(LocalPath& pathArg, LocalPath& absolu
     }
 
     absolutepathArg.localpath.resize(len);
-    int newlen = GetFullPathNameW(pathArg.localpath.data(), len, absolutepathArg.localpath.data(), NULL);
+    int newlen = GetFullPathNameW(pathArg.localpath.data(), len, (LPWSTR)absolutepathArg.localpath.data(), NULL);
     if (newlen <= 0 || newlen >= len)
     {
         absolutepathArg.localpath = pathArg.localpath;
@@ -1505,12 +1505,12 @@ WinDirNotify::WinDirNotify(LocalPath& localbasepath, const LocalPath& ignore, Wi
     std::wstring longname;
     auto r = localbasepath.localpath.size() + 20;
     longname.resize(r);
-    auto rr = GetLongPathNameW(localbasepath.localpath.data(), longname.data(), DWORD(r));
+    auto rr = GetLongPathNameW(localbasepath.localpath.data(), (LPWSTR)longname.data(), DWORD(r));
 
     longname.resize(rr);
     if (rr >= r)
     {
-        rr = GetLongPathNameW(localbasepath.localpath.data(), longname.data(), rr);
+        rr = GetLongPathNameW(localbasepath.localpath.data(), (LPWSTR)longname.data(), rr);
         longname.resize(rr);
     }
 
@@ -1594,7 +1594,7 @@ bool WinFileSystemAccess::getlocalfstype(const LocalPath& path, FileSystemType&
     wstring mountPoint(MAX_PATH + 1, L'\0');
 
     if (!GetVolumePathNameW(path.localpath.c_str(),
-                            mountPoint.data(),
+                            (LPWSTR)mountPoint.data(),
                             MAX_PATH + 1))
     {
         return type = FS_UNKNOWN, false;
@@ -1657,7 +1657,7 @@ bool WinFileSystemAccess::issyncsupported(LocalPath& localpathArg, bool *isnetwo
     path.resize(MAX_PATH * sizeof(WCHAR));
     fsname.resize(MAX_PATH * sizeof(WCHAR));
 
-    if (GetVolumePathNameW(localpathArg.localpath.data(), path.data(), MAX_PATH)
+    if (GetVolumePathNameW(localpathArg.localpath.data(), (LPWSTR)path.data(), MAX_PATH)
         && GetVolumeInformationW((LPCWSTR)path.data(), NULL, 0, NULL, NULL, NULL, (LPWSTR)fsname.data(), MAX_PATH))
     {
         if (!memcmp(fsname.data(), VBoxSharedFolderFS, sizeof(VBoxSharedFolderFS)))
-- 
2.27.0

